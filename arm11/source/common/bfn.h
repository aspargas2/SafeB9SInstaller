#pragma once

/*
 Addresses and declarations of preexisting BootROM functions
 All of these functions should follow the standard AAPCS convention
*/

#define BFN_WAITCYCLES	(0x00011A38)

#define BFN_CPUSET	(0x000116E4)
#define BFN_CPUCPY	(0x00011730)

#define BFN_ENTERCRITICALSECTION	(0x00011AC4)
#define BFN_LEAVECRITICALSECTION	(0x00011AD8)

#define BFN_ENABLE_DCACHE	(0x00011288)
#define BFN_DISABLE_DCACHE	(0x000112A0)
#define BFN_SET_DCACHE	(0x000112B8)

#define BFN_INVALIDATE_DCACHE	(0x000112E0)
#define BFN_WRITEBACK_DCACHE	(0x000112EC)
#define BFN_WRITEBACK_INVALIDATE_DCACHE	(0x00011320)

#define BFN_INVALIDATE_DCACHE_RANGE	(0x00011358)
#define BFN_WRITEBACK_DCACHE_RANGE	(0x00011374)
#define BFN_WRITEBACK_INVALIDATE_DCACHE_RANGE	(0x00011398)

#define BFN_DATASYNCBARRIER	(0x000113C0)

#define BFN_DATAMEMBARRIER	(0x000113E8)

#define BFN_ENABLE_ICACHE	(0x000113F4)
#define BFN_DISABLE_ICACHE	(0x0001140C)
#define BFN_SET_ICACHE	(0x00011424)

// also invalidates the branch target cache in ARM11
#define BFN_INVALIDATE_ICACHE	(0x0001144C)

// WARNING: DOES NOT INVALIDATE THE BRANCH TARGET CACHE
// NEEDS TO INVALIDATE IT AND FLUSH THE PREFETCH BUFFER
#define BFN_INVALIDATE_ICACHE_RANGE	(0x00011458)

// void instructionSynchronizationBarrier()
#define BFN_INSTSYNCBARRIER	(0x00011490)

// void invalidateBranchTargetCache()
#define BFN_INVALIDATE_BT_CACHE_RANGE	(0x000114F4)
